#!/bin/bash

cd /

target_dir="$1"
backup_dir="${target_dir}/.backups"

now="$(date -u '+%s')"
day_length=$(( 60 * 60 * 24 ))
month_length=$(( day_length * 30 ))
week_length=$(( day_length * 7 ))
year_length=$(( day_length * 365 ))

delete() {
    btrfs property set -ts "$1" ro false
    btrfs subvolume delete "$1"
    btrfs filesystem sync "${backup_dir}"
}

backup_to_date() {
    date -u -d "$(basename "$1")" '+%s'
}

last_backup_date=0

while read -r fname; do
    backup_date="$(backup_to_date "${fname}")"

    time_since_last_backup="$(( backup_date - last_backup_date ))"
    time_until_now="$(( now - backup_date ))"

    if [[ ${time_until_now} -gt ${year_length} ]]; then
        if [[ ${time_since_last_backup} -gt ${month_length} ]]; then
            last_backup_date=$(( backup_date - ( backup_date % month_length ) ))
        else
            delete "$fname"
        fi
    elif [[ ${time_until_now} -gt ${month_length} ]]; then
        if [[ ${time_since_last_backup} -gt ${week_length} ]]; then
            last_backup_date=$(( backup_date - ( backup_date % week_length ) ))
        else
            delete "$fname"
        fi
    elif [[ ${time_until_now} -gt ${day_length} ]]; then
        if [[ ${time_since_last_backup} -gt ${day_length} ]]; then
            last_backup_date=$(( backup_date - ( backup_date % day_length ) ))
        else
            delete "$fname"
        fi
    else
        # All done!
        break
    fi
done < <( find "${backup_dir}" -mindepth 1 -maxdepth 1 -prune -type d | sort )
